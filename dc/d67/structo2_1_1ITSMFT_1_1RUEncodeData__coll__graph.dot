digraph "o2::ITSMFT::RUEncodeData"
{
 // INTERACTIVE_SVG=YES
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{o2::ITSMFT::RUEncodeData\n||+ clear()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +cableHWID" ,arrowhead="odiamond",fontname="Helvetica"];
  Node2 [label="{array\< std::uint8_t,\l MaxCablesPerRU \>\n||}",height=0.2,width=0.4,color="grey75"];
  Node3 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +bcData" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 [label="{o2::InteractionRecord\n||+ InteractionRecord()\l+ InteractionRecord()\l+ InteractionRecord()\l+ clear()\l+ isDummy()\l+ setFromNS()\l+ operator==()\l+ differenceInBC()\l+ print()\l+ ClassDefNV()\l+ bc2ns()\l+ ns2bc()\l}",height=0.2,width=0.4,color="black",URL="$d1/d21/structo2_1_1InteractionRecord.html"];
  Node4 -> Node3 [color="grey25",fontsize="10",style="solid",label=" +bc" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{uint16_t\n||}",height=0.2,width=0.4,color="grey75"];
  Node5 -> Node3 [color="grey25",fontsize="10",style="solid",label=" +orbit" ,arrowhead="odiamond",fontname="Helvetica"];
  Node5 [label="{uint32_t\n||}",height=0.2,width=0.4,color="grey75"];
  Node6 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +chInfo" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 [label="{o2::ITSMFT::ChipInfo\n||+ print()\l}",height=0.2,width=0.4,color="black",URL="$d6/d93/structo2_1_1ITSMFT_1_1ChipInfo.html"];
  Node7 -> Node6 [color="grey25",fontsize="10",style="solid",label=" +chOnRU" ,arrowhead="odiamond",fontname="Helvetica"];
  Node7 [label="{o2::ITSMFT::ChipOnRUInfo\n||+ print()\l}",height=0.2,width=0.4,color="black",URL="$da/d97/structo2_1_1ITSMFT_1_1ChipOnRUInfo.html"];
  Node8 -> Node7 [color="grey25",fontsize="10",style="solid",label=" +chipOnCable\n+id\n+chipOnModuleHW\n+moduleSW\n+chipOnModuleSW\n+cableHW\n+moduleHW\n+cableSW" ,arrowhead="odiamond",fontname="Helvetica"];
  Node8 [label="{uint8_t\n||}",height=0.2,width=0.4,color="grey75"];
  Node8 -> Node7 [color="grey25",fontsize="10",style="solid",label=" +DUMMY8" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 -> Node6 [color="grey25",fontsize="10",style="solid",label=" +user\n+id\n+ruType\n+ru" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 -> Node6 [color="grey25",fontsize="10",style="solid",label=" +DUMMY16" ,arrowhead="odiamond",fontname="Helvetica"];
  Node8 -> Node6 [color="grey25",fontsize="10",style="solid",label=" +DUMMY8" ,arrowhead="odiamond",fontname="Helvetica"];
  Node9 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +buffer" ,arrowhead="odiamond",fontname="Helvetica"];
  Node9 [label="{o2::ITSMFT::PayLoadCont\n||+ PayLoadCont()\l+ ~PayLoadCont()\l+ data()\l+ expand()\l+ isEmpty()\l+ clear()\l+ getUnusedSize()\l+ getSize()\l+ getOffset()\l+ getCapacity()\l+ getFreeCapacity()\l+ ensureFreeCapacity()\l+ addFast()\l+ addFast()\l+ addFast()\l+ eraseFast()\l+ erase()\l+ add()\l+ add()\l+ add()\l+ shrinkToSize()\l+ operator[]()\l+ operator[]()\l+ current()\l+ next()\l+ next()\l+ rewind()\l+ moveUnusedToHead()\l+ append()\l+ getPtr()\l+ setPtr()\l+ getEnd()\l+ setEnd()\l}",height=0.2,width=0.4,color="black",URL="$df/dc4/classo2_1_1ITSMFT_1_1PayLoadCont.html"];
  Node10 -> Node9 [color="grey25",fontsize="10",style="solid",label=" +MinCapacity" ,arrowhead="odiamond",fontname="Helvetica"];
  Node10 [label="{int\n||}",height=0.2,width=0.4,color="black",URL="$d1/da0/classint.html"];
  Node10 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +type\n+id\n+chipIDFirst2Conv\n+nChips\n+nCables" ,arrowhead="odiamond",fontname="Helvetica"];
  Node11 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +cableEntryInRaw\n+cableEndInRaw" ,arrowhead="odiamond",fontname="Helvetica"];
  Node11 [label="{array\< int, MaxCablesPerRU \>\n||}",height=0.2,width=0.4,color="grey75"];
}
